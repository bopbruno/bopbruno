package br.com.pdfbrn;

import java.io.FileOutputStream;
import java.text.SimpleDateFormat;
import java.util.Date;

import com.itextpdf.text.*;
import com.itextpdf.text.pdf.*;
import com.itextpdf.text.pdf.draw.DottedLineSeparator;
import com.itextpdf.text.pdf.draw.LineSeparator;

public class RelatorioOperacoesCredito {

    public static void main(String[] args) {
        Document doc = new Document(PageSize.A4, 50, 50, 50, 50);
        try {
            PdfWriter.getInstance(doc, new FileOutputStream("relatorio_operacoes.pdf"));
            doc.open();

            // Fontes
            Font fonteCabecalho = new Font(Font.FontFamily.HELVETICA, 10, Font.BOLD);
            Font fonteNormal = new Font(Font.FontFamily.HELVETICA, 8);
            Font fonteNegrito = new Font(Font.FontFamily.HELVETICA, 8, Font.BOLD);
            Font fonteTitulo = new Font(Font.FontFamily.HELVETICA, 12, Font.BOLD);
            Font fonteAviso = new Font(Font.FontFamily.HELVETICA, 9, Font.NORMAL, BaseColor.RED);

            doc.add(new Chunk(addLinhaPontilhada()));

            // Título principal
            Paragraph titulo = new Paragraph("Bank of China (Brasil) Banco Múltiplo S/A", fonteTitulo);
            titulo.setAlignment(Element.ALIGN_CENTER);
            doc.add(titulo);

            Paragraph subtitulo = new Paragraph("Relatório de operações de crédito", fonteCabecalho);
            subtitulo.setAlignment(Element.ALIGN_CENTER);
            subtitulo.setSpacingAfter(10);
            doc.add(subtitulo);

            // Dados do cliente
            PdfPTable dadosTable = new PdfPTable(2);
            dadosTable.setWidthPercentage(100);
            dadosTable.setWidths(new float[]{70, 30});
            dadosTable.getDefaultCell().setBorder(Rectangle.NO_BORDER);

            dadosTable.addCell(new Phrase("CPF/CNPJ: 12.018.374/0001-02", fonteCabecalho));
            dadosTable.addCell(new Phrase("Agência: 19", fonteCabecalho));

            doc.add(dadosTable);
            
            doc.add(Chunk.NEWLINE);

            // Linhas de contratos
            doc.add(new Chunk(addLinha()));
            addContrato(doc, "123456", "29/06/2023", "105.000.000,00",
                        "MÚTUO PARCELADO", "16/06/2028", "101.664.726,83", "534.789,00", fonteNegrito, fonteNormal);
            doc.add(new Chunk(addLinha()));
            addContrato(doc, "87845641", "01/09/2023", "50.000,00",
                        "ACC COBRANCA", "31/12/2027", "15.000,00", "0", fonteNegrito, fonteNormal);
            doc.add(new Chunk(addLinha()));
            doc.add(Chunk.NEWLINE);
            doc.add(Chunk.NEWLINE);
            // Rodapé
            String dataEmissao = new SimpleDateFormat("dd/MM/yyyy HH:mm").format(new Date());
            Paragraph emissao = new Paragraph("Relatório emitido em: " + dataEmissao, fonteNegrito);
            doc.add(emissao);

            Paragraph aviso = new Paragraph("Valores para simples conferência e sujeitos a alteração. Saldos não válidos para liquidação antecipada.", fonteAviso);
            aviso.setSpacingBefore(5);
            doc.add(aviso);

            // Linha inferior tracejada
            doc.add(Chunk.NEWLINE);
            doc.add(new Chunk(addLinhaPontilhada()));

        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            doc.close();
        }
    }

    private static void addContrato(Document doc,
                                    String contrato, String emissao, String principal,
                                    String produto, String vencimento, String sldAtual, String sldVencido,
                                    Font fonteNegrito, Font fonteNormal) throws DocumentException {

        PdfPTable tabela = new PdfPTable(6);
        tabela.setWidthPercentage(100);
        tabela.setWidths(new float[]{1.3f, 2f, 2.0f, 2.2f, 2.0f, 1.5f});
        tabela.getDefaultCell().setBorder(Rectangle.NO_BORDER);

        // Linha 1
        tabela.addCell(getCell("CONTRATO", fonteNegrito));
        tabela.addCell(getCell(contrato, fonteNormal));
        tabela.addCell(getCell("PRODUTO", fonteNegrito));
        tabela.addCell(getCell(produto, fonteNormal));
        tabela.addCell(new PdfPCell(new Phrase("")) {{ setBorder(Rectangle.NO_BORDER); }});
        tabela.addCell(new PdfPCell(new Phrase("")) {{ setBorder(Rectangle.NO_BORDER); }});        

        // Linha 2
        tabela.addCell(getCell("EMISSÃO", fonteNegrito));
        tabela.addCell(getCell(emissao, fonteNormal));
        tabela.addCell(getCell("VENCIMENTO", fonteNegrito));
        tabela.addCell(getCell(vencimento, fonteNormal));
        tabela.addCell(new PdfPCell(new Phrase("")) {{ setBorder(Rectangle.NO_BORDER); }});
        tabela.addCell(new PdfPCell(new Phrase("")) {{ setBorder(Rectangle.NO_BORDER); }});

        // Linha 3
        tabela.addCell(getCell("PRINCIPAL", fonteNegrito));
        tabela.addCell(getCell(principal, fonteNormal));
        tabela.addCell(getCell("SLD. ATUAL", fonteNegrito));
        tabela.addCell(getCell(sldAtual, fonteNormal));
        tabela.addCell(getCell("SLD. VENCIDO", fonteNegrito));
        tabela.addCell(getCell(sldVencido, fonteNormal));

        doc.add(tabela);
    }

    private static PdfPCell getCell(String texto, Font fonte) {
        PdfPCell cell = new PdfPCell(new Phrase(texto, fonte));
        cell.setBorder(Rectangle.NO_BORDER);
        return cell;
    }
    
    private static LineSeparator addLinha() {
        LineSeparator linhaTracejada = new LineSeparator();
        linhaTracejada.setLineWidth(0.5f);
        linhaTracejada.setPercentage(100);
        linhaTracejada.setLineColor(BaseColor.BLACK);
        return linhaTracejada;
    }

    private static LineSeparator addLinhaPontilhada() {
    	DottedLineSeparator dottedLineSeparator = new DottedLineSeparator();
    	dottedLineSeparator.setGap(3);
    	dottedLineSeparator.setLineWidth(2);
        return dottedLineSeparator;
    }

}
